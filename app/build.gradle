apply plugin: 'com.android.application'

println "hello gradle"
println "${username}"

// gradle 是弱类型语言 可以修改数据的类型 比如从字符串类型修改为整数类型
rootProject.ext.username =25
println "${rootProject.ext.username}"
println "${isRelease}"

// 赋值和引用
def androidId = rootProject.ext.androidId
def appId = rootProject.ext.appId
def url = rootProject.ext.url
def support = rootProject.ext.dependencies

android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion
    defaultConfig {
        applicationId appId.app
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 开启分包
        multiDexEnabled true
        // 设置分包配置
        // multiDexKeepFile file('multidex-config.txt')

        // 将svg图片生成 指定纬度的png图片
        // vectorDrawables.generateDensities('xhdpi','xxhdpi')
        // 使用support-v7兼容 （5.0版本以上）
        // vectorDrawables.useSupportLibrary = true
        // 只保留指定和默认资源
        // resConfigs('zh-rCN')

        // 配置so库CPU架构 （真机：arm 模拟器 x86）
        ndk {
            // 真机启动
            // abiFilters('armeabi', 'armeabi-v7a')
            // 为了模拟器启动
            // abiFilters('x86','x86-64')
        }

        // 资源属性


        // 分包配置 可以将指定的类分包到主包中

    }
    buildTypes {
        release {
            buildConfigField("String", "release", "\"${url.release}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("String", "debug", "\"${url.debug}\"")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // 标准写法
    //implementation group: 'androidx.appcompat', name:'appcompat', version:'1.1.0'
    // 简写法
    // implementation 'androidx.appcompat:appcompat:1.1.0'
    // implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    // implementation 'androidx.recyclerview:recyclerview:1.1.0'

    //implementation support.appcompat
    //implementation support.constraint
    //implementation support.recyclerview

    // 第三方库 最简洁的方法 类似与lambda方法
    support.each { k, v-> implementation v }


}
